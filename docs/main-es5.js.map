{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/block/block.component.html","src/app/blockchain/blockchain.component.html","src/app/options/options.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/block/block.component.css","src/app/block/block.component.ts","src/app/blockchain/blockchain.component.css","src/app/blockchain/blockchain.component.ts","src/app/options/options.component.css","src/app/options/options.component.ts","src/app/prng.ts","src/app/services/external-mining.service.ts","src/app/services/hash.service.ts","src/app/services/message-service.service.ts","src/app/services/mining-engine.service.ts","src/app/services/shared.service.ts","src/app/sha-256.js","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<link href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\\\" rel=\\\"stylesheet\\\">\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n  <span class=\\\"fill\\\"></span>\\r\\n  <span>{{title}}</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div id=\\\"title\\\">\\r\\n  <h2 class=\\\"mat-h2\\\">Ian's Blockchain Simulator</h2>\\r\\n</div>\\r\\n\\r\\n<app-options></app-options> \\r\\n<app-blockchain></app-blockchain>\"","export default \"<mat-card \\r\\n    [ngClass]=\\\"{\\r\\n        'good-status' : isValid,\\r\\n        'bad-status' : isValid == false\\r\\n    }\\\">\\r\\n    <mat-card-title>Block {{count}}</mat-card-title>\\r\\n    <mat-card-subtitle>Status: {{isValid ? \\\"good\\\" : \\\"bad\\\" }}</mat-card-subtitle>\\r\\n    <mat-card-content>\\r\\n        <div class=\\\"fields\\\">\\r\\n            <mat-form-field >\\r\\n                <input matInput placeholder=\\\"ID\\\" [(ngModel)]=\\\"id\\\" readonly>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Parent\\\" [(ngModel)]=\\\"parentHash\\\" readonly>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <textarea matInput placeholder=\\\"Data\\\" [(ngModel)]=\\\"data\\\" (ngModelChange)=\\\"onUpdate()\\\" rows=5 spellcheck=\\\"false\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Nonce\\\" [(ngModel)]=\\\"nonce\\\" (ngModelChange)=\\\"onUpdate()\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Hash\\\" [(ngModel)]=\\\"hash\\\" readonly>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n        <button mat-raised-button (click)=\\\"onMine()\\\">Mine</button>\\r\\n        <p id=\\\"timer\\\">({{time}} ms) </p>\\r\\n        <!-- <div id=\\\"spinner\\\" *ngIf=\\\"displayLoading | async\\\"><img src=\\\"assets/loading2.gif\\\"width=\\\"30\\\" height=\\\"30\\\"></div> -->\\r\\n    </mat-card-actions>\\r\\n</mat-card>\"","export default \"<div id=\\\"buttons\\\">\\r\\n    <button mat-raised-button (click)=\\\"onCreate()\\\">Create Block</button>\\r\\n    <button mat-raised-button (click)=\\\"onReset()\\\">Reset</button>\\r\\n</div>\\r\\n\\r\\n<app-block *ngFor=\\\"let b of chain; let idx = index\\\" \\r\\n    [count]=\\\"(idx + 1)\\\"\\r\\n    [parentId]=\\\"b.parentId\\\"\\r\\n    [parentHash]=\\\"b.parentHash\\\">\\r\\n</app-block>\\r\\n\"","export default \"<div id=\\\"options-container\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Engine</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"selectedEngine\\\" (ngModelChange)=\\\"updateEngine()\\\">\\r\\n            <mat-option *ngFor=\\\"let e of engines\\\" [value]=\\\"e.value\\\" [disabled]=\\\"e.disabled\\\">\\r\\n                {{e.viewValue}}\\r\\n            </mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n    \\r\\n    <label class=\\\"mat-typography\\\">Nonce Generator:</label> \\r\\n    <mat-radio-group aria-label=\\\"Nonce Generator\\\" [(ngModel)]=\\\"nonceGenerator\\\" (ngModelChange)=\\\"updateNonce()\\\">\\r\\n        <mat-radio-button value=\\\"linear\\\">Linear</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"random\\\">Random</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n    <br> \\r\\n\\r\\n    <mat-form-field >\\r\\n        <input matInput placeholder=\\\"Difficulty\\\" [(ngModel)]=\\\"difficulty\\\" (ngModelChange)=\\\"updateDifficulty()\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Attempts\\\" [(ngModel)]=\\\"attempts\\\" (ngModelChange)=\\\"updateAttempts()\\\">\\r\\n    </mat-form-field>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"h2 {\\r\\n    font-size: 30px;\\r\\n    font-weight: normal;\\r\\n    margin-bottom: 5pt;\\r\\n    margin-top: 5pt;\\r\\n}\\r\\n\\r\\n#title {\\r\\n    padding: 10pt;\\r\\n}\\r\\n\\r\\n.fill {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgyIHtcclxuICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHQ7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHQ7XHJcbn1cclxuXHJcbiN0aXRsZSB7XHJcbiAgICBwYWRkaW5nOiAxMHB0O1xyXG59XHJcblxyXG4uZmlsbCB7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Blockchain-Sim'; \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { MatToolbarModule, \r\n         MatButtonModule, \r\n         MatCardModule, \r\n         MatFormFieldModule, \r\n         MatInputModule, \r\n         MatSelectModule, \r\n         MatProgressSpinnerModule, \r\n         MatOptionModule, \r\n         MatRadioModule } from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BlockchainComponent } from './blockchain/blockchain.component';\r\nimport { BlockComponent } from './block/block.component';\r\nimport { OptionsComponent } from './options/options.component';\r\nimport { MessageServiceService } from './services/message-service.service';\r\nimport { HashService } from './services/hash.service';\r\nimport { MiningEngineService } from './services/mining-engine.service';\r\nimport { ExternalMiningService } from './services/external-mining.service';\r\nimport { SharedService } from './services/shared.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlockchainComponent,\r\n    BlockComponent,\r\n    OptionsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule, \r\n    MatSelectModule, \r\n    MatProgressSpinnerModule, \r\n    MatOptionModule, \r\n    MatRadioModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    HashService, \r\n    MiningEngineService, \r\n    MessageServiceService, \r\n    ExternalMiningService,\r\n    SharedService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".fields {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.fields > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\nmat-card {\\r\\n    width: 400px;\\r\\n    margin: 10pt;\\r\\n    display: inline-block;\\r\\n    /* border: 1px solid #000 */\\r\\n}\\r\\n  \\r\\n.good-status {\\r\\n    background-color: rgba(203, 255, 179, 0.5);\\r\\n}\\r\\n  \\r\\n.bad-status {\\r\\n    background-color: rgba(255, 199, 199, 0.4);\\r\\n}\\r\\n  \\r\\ntextarea {\\r\\n    resize: none;\\r\\n}\\r\\n  \\r\\n#timer {\\r\\n    font-size: 10pt;\\r\\n    display: inline-block;\\r\\n    margin-left: 10pt;\\r\\n    color: rgb(70, 70, 70);\\r\\n\\r\\n}\\r\\n  \\r\\n/* #spinner {\\r\\n    display: inline-block;\\r\\n    margin-left: 20pt;\\r\\n    position: relative;\\r\\n    top: 8px\\r\\n} */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmxvY2svYmxvY2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLHFCQUFxQjtJQUNyQiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsc0JBQXNCOztBQUUxQjs7QUFFQTs7Ozs7R0FLRyIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrL2Jsb2NrLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmllbGRzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiAgXHJcbi5maWVsZHMgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDEwcHQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCAjMDAwICovXHJcbn1cclxuXHJcbi5nb29kLXN0YXR1cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMywgMjU1LCAxNzksIDAuNSk7XHJcbn1cclxuXHJcbi5iYWQtc3RhdHVzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxOTksIDE5OSwgMC40KTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG4jdGltZXIge1xyXG4gICAgZm9udC1zaXplOiAxMHB0O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHQ7XHJcbiAgICBjb2xvcjogcmdiKDcwLCA3MCwgNzApO1xyXG5cclxufVxyXG5cclxuLyogI3NwaW5uZXIge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHQ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDhweFxyXG59ICovIl19 */\"","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\r\nimport { MessageServiceService } from '../services/message-service.service'\r\nimport { HashService } from '../services/hash.service';\r\nimport { MiningEngineService } from '../services/mining-engine.service';\r\nimport { ExternalMiningService } from '../services/external-mining.service';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-block',\r\n  templateUrl: './block.component.html',\r\n  styleUrls: ['./block.component.css']\r\n})\r\n\r\n\r\nexport class BlockComponent implements OnInit {\r\n  @Input() count: number\r\n  @Input() parentId: number    \r\n  @Input() parentHash: string \r\n  \r\n  id: string\r\n  hash: string\r\n  data: string\r\n  nonce: number\r\n  time: number\r\n  isValid: boolean\r\n\r\n  constructor(\r\n    private messageService: MessageServiceService, \r\n    private hashService: HashService, \r\n    private miningEngine: MiningEngineService,\r\n    private externalEngine: ExternalMiningService,\r\n    private sharedService: SharedService) { \r\n\r\n    this.id = this.randomID()\r\n    this.data = \"\"\r\n    this.nonce = 0\r\n    this.isValid = false\r\n    this.time = 0\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.messageService.getMessage().subscribe(msg => {\r\n      if (msg.id == this.parentId) {   // parent block hash has changed\r\n        this.parentHash = msg.text\r\n        this.updateHash()\r\n        this.messageService.sendMessage(this.id, this.hash)  // notify child block of new hash\r\n      }\r\n    });\r\n  }\r\n\r\n  // on init, after injection\r\n  ngOnChanges() {\r\n    this.updateHash()\r\n  }\r\n\r\n  randomID() : string {\r\n    return Math.random().toString(36).substr(2, 5) + '-' +\r\n           Math.random().toString(36).substr(2, 5)\r\n  };\r\n\r\n  onMine() {\r\n    if (this.sharedService.useEmbeddedEngine) {\r\n      let result = this.miningEngine.mine(this.id, this.parentHash, this.data)\r\n      this.nonce = result.nonce\r\n      this.time = result.time\r\n      this.onUpdate()\r\n    \r\n    } else {\r\n      this.externalEngine.mine(this.id, this.parentHash, this.data).subscribe((response: any) => {\r\n        this.nonce = response.nonce\r\n        this.time = response.time\r\n        this.onUpdate()\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onUpdate() {\r\n    this.updateHash()\r\n    this.messageService.sendMessage(this.id, this.hash)\r\n  }\r\n\r\n  updateHash() {\r\n    var hashInput = this.id + this.parentHash + this.data + this.nonce\r\n    this.hash = this.hashService.generate(hashInput)\r\n    if (this.hash.startsWith(this.sharedService.leadZeros) &&\r\n        this.parentHash.startsWith(this.sharedService.leadZeros))\r\n      this.isValid = true\r\n    else \r\n      this.isValid = false\r\n  }\r\n}\r\n","export default \"#buttons {\\r\\n    margin: 10pt;\\r\\n}\\r\\n\\r\\n#buttons button {\\r\\n    margin-left: 5pt;\\r\\n    margin-right: 5pt;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmxvY2tjaGFpbi9ibG9ja2NoYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrY2hhaW4vYmxvY2tjaGFpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2J1dHRvbnMge1xyXG4gICAgbWFyZ2luOiAxMHB0O1xyXG59XHJcblxyXG4jYnV0dG9ucyBidXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVwdDtcclxuICAgIG1hcmdpbi1yaWdodDogNXB0O1xyXG59Il19 */\"","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { BlockComponent } from '../block/block.component';\r\n\r\n\r\n// Represents a block upon creation, with a reference to its parent block\r\nexport class BlockTemplate {\r\n  parentId: string\r\n  parentHash: string\r\n\r\n  constructor(id: string, hash: string) {\r\n    this.parentId = id\r\n    this.parentHash = hash\r\n  }\r\n}\r\n\r\n/* BlockchainComponent represents the blockchain as a whole, as well as the Create Block and Reset buttons \r\n*/\r\n@Component({\r\n  selector: 'app-blockchain',\r\n  templateUrl: './blockchain.component.html',\r\n  styleUrls: ['./blockchain.component.css']\r\n})\r\nexport class BlockchainComponent implements OnInit {\r\n \r\n  /* array of blocks in the chain */\r\n  chain: BlockTemplate[];    \r\n  /* reference to already-created Block components */\r\n  @ViewChildren(BlockComponent) blockComponents: QueryList<BlockComponent>  \r\n  \r\n  constructor() { \r\n    this.chain = []\r\n  }\r\n\r\n  onCreate() {\r\n    var previousHash, previousId\r\n\r\n    if (this.chain.length == 0) {\r\n      previousHash = previousId = \"0000000000000000000000000000000000000000\"\r\n    } else {\r\n      previousHash = this.blockComponents.last.hash  // current hash of previous block\r\n      previousId = this.blockComponents.last.id\r\n    }\r\n    \r\n    var newBlock = new BlockTemplate(previousId, previousHash)\r\n    this.chain.push(newBlock)\r\n  }\r\n \r\n  onReset() {\r\n    this.chain = []\r\n  } \r\n\r\n  ngOnInit() { }\r\n\r\n}","export default \"#options-container {\\r\\n    padding-left: 17pt;\\r\\n    padding-right: 17pt;\\r\\n    padding-bottom: 5pt;\\r\\n    padding-top: 15pt;\\r\\n    background-color: rgb(233, 233, 233);\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    width: 400px;\\r\\n    margin-left: 5pt;\\r\\n    margin-right: 25pt;\\r\\n}\\r\\n\\r\\nmat-radio-button {\\r\\n    margin-right: 10pt;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    margin-left: 5pt;\\r\\n    margin-right: 10pt;\\r\\n    font-size: 12pt;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3B0aW9ucy9vcHRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9vcHRpb25zL29wdGlvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNvcHRpb25zLWNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE3cHQ7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxN3B0O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVwdDtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMywgMjMzLCAyMzMpO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB0O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB0O1xyXG59XHJcblxyXG5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBwdDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVwdDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBwdDtcclxuICAgIGZvbnQtc2l6ZTogMTJwdDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n\r\n/* OptionsComponent consists of the various options that are given to the mining engine \r\n*/\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.css']\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n\r\n  attempts: number = 1000000\r\n  difficulty: string = \"000\"\r\n  nonceGenerator: string = \"linear\"\r\n  selectedEngine: string = \"embedded\"\r\n  engines = [\r\n    {value: 'embedded', viewValue: \"Use Embedded Mining Engine\", disabled: \"false\"},\r\n    {value: 'external', viewValue: \"Use External Mining Engine (Python WebService)\", disabled: \"true\"}\r\n  ]\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  updateNonce() {\r\n    if (this.nonceGenerator === 'linear')\r\n      this.sharedService.useLinearNonce = true\r\n    else\r\n      this.sharedService.useLinearNonce = false\r\n  }\r\n\r\n  updateAttempts() {\r\n    this.sharedService.maxAttempts = this.attempts\r\n  }\r\n\r\n  updateDifficulty() {\r\n    this.sharedService.leadZeros = this.difficulty\r\n  }\r\n\r\n  updateEngine() {\r\n    if (this.selectedEngine === 'embedded')\r\n      this.sharedService.useEmbeddedEngine = true\r\n    else\r\n      this.sharedService.useEmbeddedEngine = false\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","/**\r\n * Creates a pseudo-random value generator. The seed must be an integer.\r\n * https://gist.github.com/blixt/f17b47c62508be59987b\r\n * \r\n * Uses an optimized version of the Park-Miller PRNG.\r\n * http://www.firstpr.com.au/dsp/rand31/\r\n */\r\nexport class Random {\r\n    seed: number\r\n    \r\n    constructor(newSeed) {\r\n      this.seed = newSeed % 2147483647;\r\n      if (this.seed <= 0) {\r\n        this.seed += 2147483646;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns a pseudo-random value between 1 and 2147483646 (inclusive).\r\n     */\r\n    next() {\r\n      return this.seed = this.seed * 16807 % 2147483647;\r\n    };\r\n\r\n\r\n    /**\r\n     * Returns a pseudo-random floating point number in range [0, 1).\r\n     */\r\n    nextFloat(opt_minOrMax, opt_max) {\r\n      // We know that result of next() will be 1 to 2147483646 (inclusive).\r\n      return (this.next() - 1) / 2147483646;\r\n    };\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SharedService } from './shared.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n\r\n/* ExternalMiningService sends requests to an external web service for blockchain mining\r\n*/\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExternalMiningService {\r\n\r\n  url = \"http://localhost:5000/blockchain\"\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private sharedService: SharedService) { }\r\n\r\n\r\n  mine(id: string, parentHash: string, data: string) {\r\n    let request = JSON.stringify({\r\n      'id': id,\r\n      'parentHash': parentHash,\r\n      'data': data,\r\n      'maxAttempts': this.sharedService.maxAttempts,\r\n      'prefix': this.sharedService.leadZeros,\r\n      'useLinear': this.sharedService.useLinearNonce ? 1 : 0\r\n    })\r\n\r\n    return this.http.post(this.url, request, {headers: {'Content-Type': 'application/json', }})\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Sha256 } from '../sha-256.js';\r\n\r\n\r\n/* HashService provides a SHA-256 hash function\r\n*/\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HashService {\r\n\r\n  constructor() { }\r\n\r\n  generate(input : string) : string {\r\n    return Sha256.hash(input)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MessageServiceService {\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  constructor() { }\r\n\r\n  sendMessage(newId: string, newHash: string) {\r\n    this.subject.next({id: newId, text: newHash})\r\n  }\r\n\r\n  getMessage(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HashService } from './hash.service';\r\nimport { Random } from '../prng'\r\nimport { SharedService } from './shared.service';\r\n\r\n\r\n/* MiningEngineService performs embedded blockchain mining\r\n*/\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MiningEngineService {\r\n\r\n  constructor(\r\n    private hashService: HashService,\r\n    private sharedService: SharedService) {\r\n  }\r\n\r\n/*  returns a JSON object \r\n     {'nonce': the resulting nonce,\r\n      'time':  the time in ms to produce nonce \r\n     }  \r\n*/\r\n  mine(id: string, parentHash: string, data: string) {\r\n    var hashInput = id + parentHash + data\r\n    \r\n    if (this.sharedService.useLinearNonce) {\r\n      return this.linearMine(hashInput)\r\n    } else {\r\n      return this.randomMine(hashInput)\r\n    }\r\n  }\r\n\r\n  // performs mining by generating nonce values linearly\r\n  linearMine(hashInput: string) {\r\n    let start = Date.now()\r\n    let nonce\r\n    for (nonce = 0; nonce < this.sharedService.maxAttempts; nonce++) {\r\n      var newHash = this.hashService.generate(hashInput + nonce)\r\n      if (newHash.startsWith(this.sharedService.leadZeros)) {\r\n        break\r\n      }\r\n    }\r\n    let elapsedTime = Date.now() - start\r\n    return {\r\n      \"nonce\": nonce,\r\n      \"time\": elapsedTime\r\n    }\r\n  }\r\n\r\n  // performs mining by generating nonce values randomly\r\n  randomMine(hashInput: string) {\r\n    let start = Date.now()\r\n    let random = new Random(Date.now())\r\n    let nonce\r\n    for (let i = 0; i < this.sharedService.maxAttempts; i++) {\r\n      nonce = random.next()\r\n      let newHash = this.hashService.generate(hashInput + nonce)\r\n      if (newHash.startsWith(this.sharedService.leadZeros)) {\r\n        break\r\n      }\r\n    }\r\n    let elapsedTime = Date.now() - start\r\n    return {\r\n      \"nonce\": nonce,\r\n      \"time\": elapsedTime\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n\r\n/* SharedService stores various global option variables to be shared by multiple components/services\r\n*/\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n\r\n  maxAttempts: number\r\n  leadZeros: string\r\n  useEmbeddedEngine: boolean\r\n  useLinearNonce: boolean\r\n\r\n  constructor() {     \r\n    this.maxAttempts = 1000000\r\n    this.leadZeros = \"000\"\r\n    this.useEmbeddedEngine = true\r\n    this.useLinearNonce = true\r\n  }\r\n}\r\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n/* SHA-256 (FIPS 180-4) implementation in JavaScript                  (c) Chris Veness 2002-2019  */\r\n/*                                                                                   MIT Licence  */\r\n/* www.movable-type.co.uk/scripts/sha256.html                                                     */\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n\r\n/**\r\n * SHA-256 hash function reference implementation.\r\n *\r\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\r\n * intended to aid understanding of the algorithm rather than for production use.\r\n *\r\n * While it could be used where performance is not critical, I would recommend using the ‘Web\r\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\r\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\r\n *\r\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\r\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\r\n */\r\nexport class Sha256 {\r\n\r\n    /**\r\n     * Generates SHA-256 hash of string.\r\n     *\r\n     * @param   {string} msg - (Unicode) string to be hashed.\r\n     * @param   {Object} [options]\r\n     * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\r\n     *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\r\n     * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\r\n     *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\r\n     * @returns {string} Hash of msg as hex character string.\r\n     *\r\n     * @example\r\n     *   import Sha256 from './sha256.js';\r\n     *   const hash = Sha256.hash('abc'); // 'ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad'\r\n     */\r\n    static hash(msg, options) {\r\n        const defaults = { msgFormat: 'string', outFormat: 'hex' };\r\n        const opt = Object.assign(defaults, options);\r\n\r\n        // note use throughout this routine of 'n >>> 0' to coerce Number 'n' to unsigned 32-bit integer\r\n\r\n        switch (opt.msgFormat) {\r\n            default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\r\n            case 'string':   msg = utf8Encode(msg);       break;\r\n            case 'hex-bytes':msg = hexBytesToString(msg); break; // mostly for running tests\r\n        }\r\n\r\n        // constants [§4.2.2]\r\n        const K = [\r\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2 ];\r\n\r\n        // initial hash value [§5.3.3]\r\n        const H = [\r\n            0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];\r\n\r\n        // PREPROCESSING [§6.2.1]\r\n\r\n        msg += String.fromCharCode(0x80);  // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\r\n\r\n        // convert string msg into 512-bit blocks (array of 16 32-bit integers) [§5.2.1]\r\n        const l = msg.length/4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\r\n        const N = Math.ceil(l/16);  // number of 16-integer (512-bit) blocks required to hold 'l' ints\r\n        const M = new Array(N);     // message M is N×16 array of 32-bit integers\r\n\r\n        for (let i=0; i<N; i++) {\r\n            M[i] = new Array(16);\r\n            for (let j=0; j<16; j++) { // encode 4 chars per integer (64 per block), big-endian encoding\r\n                M[i][j] = (msg.charCodeAt(i*64+j*4+0)<<24) | (msg.charCodeAt(i*64+j*4+1)<<16)\r\n                        | (msg.charCodeAt(i*64+j*4+2)<< 8) | (msg.charCodeAt(i*64+j*4+3)<< 0);\r\n            } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\r\n        }\r\n        // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\r\n        // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\r\n        // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\r\n        const lenHi = ((msg.length-1)*8) / Math.pow(2, 32);\r\n        const lenLo = ((msg.length-1)*8) >>> 0;\r\n        M[N-1][14] = Math.floor(lenHi);\r\n        M[N-1][15] = lenLo;\r\n\r\n\r\n        // HASH COMPUTATION [§6.2.2]\r\n\r\n        for (let i=0; i<N; i++) {\r\n            const W = new Array(64);\r\n\r\n            // 1 - prepare message schedule 'W'\r\n            for (let t=0;  t<16; t++) W[t] = M[i][t];\r\n            for (let t=16; t<64; t++) {\r\n                W[t] = (Sha256.σ1(W[t-2]) + W[t-7] + Sha256.σ0(W[t-15]) + W[t-16]) >>> 0;\r\n            }\r\n\r\n            // 2 - initialise working variables a, b, c, d, e, f, g, h with previous hash value\r\n            let a = H[0], b = H[1], c = H[2], d = H[3], e = H[4], f = H[5], g = H[6], h = H[7];\r\n\r\n            // 3 - main loop (note '>>> 0' for 'addition modulo 2^32')\r\n            for (let t=0; t<64; t++) {\r\n                const T1 = h + Sha256.Σ1(e) + Sha256.Ch(e, f, g) + K[t] + W[t];\r\n                const T2 =     Sha256.Σ0(a) + Sha256.Maj(a, b, c);\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + T1) >>> 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (T1 + T2) >>> 0;\r\n            }\r\n\r\n            // 4 - compute the new intermediate hash value (note '>>> 0' for 'addition modulo 2^32')\r\n            H[0] = (H[0]+a) >>> 0;\r\n            H[1] = (H[1]+b) >>> 0;\r\n            H[2] = (H[2]+c) >>> 0;\r\n            H[3] = (H[3]+d) >>> 0;\r\n            H[4] = (H[4]+e) >>> 0;\r\n            H[5] = (H[5]+f) >>> 0;\r\n            H[6] = (H[6]+g) >>> 0;\r\n            H[7] = (H[7]+h) >>> 0;\r\n        }\r\n\r\n        // convert H0..H7 to hex strings (with leading zeros)\r\n        for (let h=0; h<H.length; h++) H[h] = ('00000000'+H[h].toString(16)).slice(-8);\r\n\r\n        // concatenate H0..H7, with separator if required\r\n        const separator = opt.outFormat=='hex-w' ? ' ' : '';\r\n\r\n        return H.join(separator);\r\n\r\n        /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n        function utf8Encode(str) {\r\n            try {\r\n                return new TextEncoder().encode(str, 'utf-8').reduce((prev, curr) => prev + String.fromCharCode(curr), '');\r\n            } catch (e) { // no TextEncoder available?\r\n                return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\r\n            }\r\n        }\r\n\r\n        function hexBytesToString(hexStr) { // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\r\n            const str = hexStr.replace(' ', ''); // allow space-separated groups\r\n            return str=='' ? '' : str.match(/.{2}/g).map(byte => String.fromCharCode(parseInt(byte, 16))).join('');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Rotates right (circular right shift) value x by n positions [§3.2.4].\r\n     * @private\r\n     */\r\n    static ROTR(n, x) {\r\n        return (x >>> n) | (x << (32-n));\r\n    }\r\n\r\n\r\n    /**\r\n     * Logical functions [§4.1.2].\r\n     * @private\r\n     */\r\n    static Σ0(x) { return Sha256.ROTR(2,  x) ^ Sha256.ROTR(13, x) ^ Sha256.ROTR(22, x); }\r\n    static Σ1(x) { return Sha256.ROTR(6,  x) ^ Sha256.ROTR(11, x) ^ Sha256.ROTR(25, x); }\r\n    static σ0(x) { return Sha256.ROTR(7,  x) ^ Sha256.ROTR(18, x) ^ (x>>>3);  }\r\n    static σ1(x) { return Sha256.ROTR(17, x) ^ Sha256.ROTR(19, x) ^ (x>>>10); }\r\n    static Ch(x, y, z)  { return (x & y) ^ (~x & z); }          // 'choice'\r\n    static Maj(x, y, z) { return (x & y) ^ (x & z) ^ (y & z); } // 'majority'\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}